---
- name: Ensure tmux is installed
  apt:
    name: tmux
    state: present
  become: true

- name: Kill any existing root-owned anvil processes
  shell: |
    pkill -f "anvil --host" || true
  become: true
  ignore_errors: yes

- name: Kill any existing tmux sessions
  shell: |
    tmux kill-session -t anvil || true
  become: true
  ignore_errors: yes

- name: Download and install Foundry tools
  shell: |
    curl -L https://foundry.paradigm.xyz | bash 
    /root/.foundry/bin/foundryup
  become: true

- name: Create directory for chain state
  file:
    path: /root/anvil-chain-state
    state: directory
    mode: '0755'
  become: true

- name: Start Anvil in tmux session
  shell: |
    tmux new-session -d -s anvil "/root/.foundry/bin/anvil --host 0.0.0.0 --port 8545 --state /root/anvil-chain-state/chain-state.json --state-interval 30 --block-time 2"
  args:
    executable: /bin/bash
  become: true

- name: Wait for Anvil to start
  wait_for:
    port: 8545
    timeout: 30

- name: Create directory for smart contracts
  file:
    path: /opt/smart-contracts
    state: directory
    mode: '0755'
  become: true

- name: Check if smart contract deployment is enabled
  set_fact:
    deploy_smart_contracts: "{{ deploy_smart_contracts | default(false) }}"

- name: Copy smart contracts to remote machine
  synchronize:
    src: "{{ smart_contracts_dir }}/"
    dest: /opt/smart-contracts/
    rsync_opts:
      - "--exclude=.git"
  when: deploy_smart_contracts

- name: Make deploy script executable
  file:
    path: /opt/smart-contracts/deploy.sh
    mode: '0755'
  become: true
  when: deploy_smart_contracts

- name: Run deployment script
  shell: |
    cd /opt/smart-contracts
  args:
    executable: /bin/bash
  become: true
  when: deploy_smart_contracts