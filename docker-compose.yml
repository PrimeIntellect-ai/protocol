version: "3.8"
networks:
  prime:
    driver: bridge
    attachable: true
  app-network:
    driver: bridge
    attachable: true

volumes:
  redis-data:

services:
  reth:
    image: ghcr.io/paradigmxyz/reth:latest
    platform: linux/amd64
    entrypoint: ["reth", "node", "--dev", "--chain", "dev", "--dev.block-time", "2sec", "--http", "--ws", "--http.addr", "0.0.0.0", "--ws.addr", "0.0.0.0", "--metrics", "0.0.0.0:9001"]
    ports:
      - "8545:8545"
      - "9001:9001"
    networks:
      - prime
      - app-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 bash -c 'echo > /dev/tcp/localhost/8545' || exit 1"]
      interval: 3s
      timeout: 5s
      retries: 3
      start_period: 10s

  contract-deployer:
    image: ghcr.io/foundry-rs/foundry:latest
    platform: linux/amd64
    volumes:
      - ./smart-contracts:/app
    working_dir: /app
    environment:
      - RPC_URL=http://reth:8545
    entrypoint: ["/bin/sh", "-c"]
    command: |
     "
     set -x
     echo 'Starting contract deployment...'
     chmod +x ./deploy.sh
     chmod +x ./deploy_work_validation.sh
     set +e
     ./deploy.sh && ./deploy_work_validation.sh
     set -e
     echo 'Deployment completed.'
     "
    networks:
      - prime
    depends_on:
      reth:
        condition: service_healthy

  redis:
    image: redis:alpine
    ports:
      - "6380:6379"
    networks:
      - prime
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  discovery:
    image: ghcr.io/primeintellect-ai/protocol/discovery:dev
    platform: linux/amd64
    ports:
      - "8089:8089"
    environment:
      - RPC_URL=http://reth:8545
      - REDIS_URL=redis://redis:6379
      - PLATFORM_API_KEY=prime
    networks:
      - prime
    depends_on:
      reth:
        condition: service_healthy
      redis:
        condition: service_healthy
      contract-deployer:
        condition: service_completed_successfully

  orchestrator:
    image: ghcr.io/primeintellect-ai/protocol/orchestrator:dev
    platform: linux/amd64
    ports:
      - "8090:8090"
    environment:
      - RPC_URL=http://reth:8545
      - REDIS_STORE_URL=redis://redis:6379
      - DISCOVERY_URL=http://discovery:8089
      - URL=http://localhost:8090
      - COORDINATOR_KEY=${POOL_OWNER_PRIVATE_KEY}
      - COMPUTE_POOL_ID=${WORKER_COMPUTE_POOL_ID}
      - DOMAIN_ID=0
      - PORT=8090
      - DISCOVERY_REFRESH_INTERVAL=10
      - S3_CREDENTIALS=${S3_CREDENTIALS}
    networks:
      - prime
    depends_on:
      reth:
        condition: service_healthy
      redis:
        condition: service_healthy
      discovery:
        condition: service_started

  validator:
    image: ghcr.io/primeintellect-ai/protocol/validator:dev
    platform: linux/amd64
    ports:
      - "8099:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - prime
    environment:
      - RPC_URL=http://reth:8545
      - DISCOVERY_URL=http://discovery:8089
      - VALIDATOR_KEY=${PRIVATE_KEY_VALIDATOR}
      - WORK_VALIDATION_CONTRACT=${WORK_VALIDATION_CONTRACT}
      - POOL_ID=${WORKER_COMPUTE_POOL_ID}
      - WORK_VALIDATION_INTERVAL=30
      - TOPLOC_SERVER_URL=${TOPLOC_SERVER_URL}
      - TOPLOC_AUTH_TOKEN=${TOPLOC_AUTH_TOKEN}
      - TOPLOC_GRACE_INTERVAL=15
      - REDIS_URL=redis://redis:6379
    depends_on:
      reth:
        condition: service_healthy
      redis:
        condition: service_healthy
      discovery:
        condition: service_started